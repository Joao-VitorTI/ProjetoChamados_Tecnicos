<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>